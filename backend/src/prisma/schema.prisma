// Specify the datasource and generator

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(uuid())
  name         String
  phone        String   @unique
  nationalId   String   @unique
  passwordHash String
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  votes        Vote[]
  donations    Donation[]
  surveyResponses SurveyResponse[]
  demographics Demographics?
}

model Candidate {
  id           String   @id @default(uuid())
  name         String
  party        String
  position     ElectionType
  electionId   String
  election     Election @relation(fields: [electionId], references: [id])
  votes        Vote[]
  createdAt    DateTime @default(now())
}

model Election {
  id           String   @id @default(uuid())
  type         ElectionType
  year         Int
  candidates   Candidate[]
  votes        Vote[]
}

enum ElectionType {
  PRESIDENTIAL
  PARLIAMENTARY
  COUNCILLOR
}

model Vote {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  candidateId  String
  candidate    Candidate @relation(fields: [candidateId], references: [id])
  electionId   String
  election     Election  @relation(fields: [electionId], references: [id])
  createdAt    DateTime  @default(now())
}

model Demographics {
  id           String   @id @default(uuid())
  userId       String   @unique
  user         User     @relation(fields: [userId], references: [id])
  age          Int
  gender       String
  region       String
  district     String
  ward         String
}

model Survey {
  id           String   @id @default(uuid())
  question     String
  options      String[]
  createdAt    DateTime @default(now())
  responses    SurveyResponse[]
}

model SurveyResponse {
  id           String   @id @default(uuid())
  surveyId     String
  survey       Survey   @relation(fields: [surveyId], references: [id])
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  answer       String
  createdAt    DateTime @default(now())
}

model Donation {
  id           String   @id @default(uuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  amount       Float
  currency     String
  paymentRef   String
  createdAt    DateTime @default(now())
}
